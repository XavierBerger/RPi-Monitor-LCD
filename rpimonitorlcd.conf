# Initial state
fsm.initial=logo

# Define behavior of page "logo": Define light and contrast
pages.logo.content.1=lcd.cls()
pages.logo.content.2=lcd.centre_text(0,"RPi-Monitor")
pages.logo.content.3=lcd.gotorc(3,0)
pages.logo.content.4=lcd.text("U/D: Light")
pages.logo.content.3=lcd.gotorc(4,0)
pages.logo.content.6=lcd.text("L/R: Contrast")
pages.logo.content.3=lcd.gotorc(5,0)
pages.logo.content.7=lcd.text("Enter: Next")
fsm.events.0.name=enter
fsm.events.0.src=logo
fsm.events.0.dst=uptime
fsm.events.1.name=up
fsm.events.1.src=logo
fsm.events.1.dst=action
fsm.logo.onup=lcdmanager.lightup()
fsm.events.2.name=down
fsm.events.2.src=logo
fsm.events.2.dst=action
fsm.logo.ondown=lcdmanager.lightdown()
fsm.events.3.name=left
fsm.events.3.src=logo
fsm.events.3.dst=action
fsm.logo.onleft=lcdmanager.contrastdown()
fsm.events.4.name=right
fsm.events.4.src=logo
fsm.events.4.dst=action
fsm.logo.onright=lcdmanager.contrastup()

# Page uptime
pages.uptime.content.1=lcd.cls()
pages.uptime.content.2=lcd.centre_text(0,"Uptime")
pages.uptime.content.3=lcd.centre_text(2,rpimonitordm.uptime())
pages.uptime.autorefresh=10
fsm.events.5.name=left
fsm.events.5.src=uptime
fsm.events.5.dst=logo
fsm.events.6.name=right
fsm.events.6.src=uptime
fsm.events.6.dst=disk
fsm.events.7.name=enter
fsm.events.7.src=uptime
fsm.events.7.dst=disk

# Page disk
pages.disk.content.1=lcd.cls()
pages.disk.content.2=lcd.centre_text(0, "Disks usage")
pages.disk.content.3=lcd.centre_text(2, "/boot : %s" % rpimonitordm.disk("sdcard_boot") )
pages.disk.content.4=lcd.centre_text(3, "/     : %s" % rpimonitordm.disk("sdcard_root") )
pages.disk.autorefresh=10
fsm.events.8.name=left
fsm.events.8.src=disk
fsm.events.8.dst=uptime
fsm.events.9.name=right
fsm.events.9.src=disk
fsm.events.9.dst=load
fsm.events.10.name=enter
fsm.events.10.src=disk
fsm.events.10.dst=load

# Page load
pages.load.content.1=lcd.cls()
pages.load.content.2=lcd.centre_text(0, "Load Average")
pages.load.content.3=lcd.gotorc(2,1)
pages.load.content.4=lcd.text("1min : %s" % rpimonitordm.getData()['load1'])
pages.load.content.5=lcd.gotorc(3,1)
pages.load.content.6=lcd.text("5min : %s" % rpimonitordm.getData()['load5'])
pages.load.content.7=lcd.gotorc(4,0)
pages.load.content.8=lcd.text("15min : %s" % rpimonitordm.getData()['load15'])
pages.load.autorefresh=10
fsm.events.11.name=left
fsm.events.11.src=load
fsm.events.11.dst=disk
fsm.events.12.name=right
fsm.events.12.src=load
fsm.events.12.dst=mem
fsm.events.13.name=enter
fsm.events.13.src=load
fsm.events.13.dst=mem

# Page mem
pages.mem.content.1=lcd.cls()
pages.mem.content.2=lcd.centre_text(0, "Memory free")
pages.mem.content.3=lcd.centre_text(2, rpimonitordm.memory())
pages.mem.autorefresh=10
fsm.events.14.name=left
fsm.events.14.src=mem
fsm.events.14.dst=load
fsm.events.15.name=right
fsm.events.15.src=mem
fsm.events.15.dst=temp
fsm.events.16.name=enter
fsm.events.16.src=mem
fsm.events.16.dst=temp

# Page temp
pages.temp.content.1=lcd.cls()
pages.temp.content.2=lcd.centre_text(0, "Temperature")
pages.temp.content.3=lcd.centre_text(2, "CPU: %sÂ°C" % rpimonitordm.getData()['soc_temp'])
pages.temp.autorefresh=10
fsm.events.17.name=left
fsm.events.17.src=temp
fsm.events.17.dst=mem

# Page keypressed
pages.keypressed.content.1=lcd.cls()
pages.keypressed.content.2=lcd.centre_text(3,'KEYPRESSED')
fsm.events.18.name=enter
fsm.events.18.src=keypressed
fsm.events.18.dst=action
fsm.keypressed.onenter=keypressed.onenter()
fsm.events.19.name=up
fsm.events.19.src=keypressed
fsm.events.19.dst=action
fsm.keypressed.onup=keypressed.onup()
fsm.events.20.name=down
fsm.events.20.src=keypressed
fsm.events.20.dst=action
fsm.keypressed.ondown=keypressed.ondown()
fsm.events.21.name=left
fsm.events.21.src=keypressed
fsm.events.21.dst=action
fsm.keypressed.onleft=keypressed.onleft()
fsm.events.22.name=right
fsm.events.22.src=keypressed
fsm.events.22.dst=action
fsm.keypressed.onright=keypressed.onright()
